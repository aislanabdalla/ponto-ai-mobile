# .github/workflows/build-apk.yml
name: Construir APK Android

on:
  workflow_dispatch:
  push:
    branches: [ main, principal ]
    paths:
      - '**/*.dart'
      - '**/pubspec.yaml'
      - '**/android/**'
      - '.github/workflows/build-apk.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    # tudo roda dentro de mobile/
    defaults:
      run:
        working-directory: mobile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter doctor (debug)
        run: flutter doctor -v

      - name: Pub get
        run: flutter pub get

      - name: Dar permissão ao gradlew
        run: chmod +x android/gradlew

      # Opcional: força SDK/licenças, útil em projetos que reclamam
      - name: Android SDK & licenses
        shell: bash
        run: |
          set -e
          export ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          if [ ! -f "$SDKMGR" ]; then
            SDKMGR="$ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager"
          fi
          yes | "$SDKMGR" --licenses || true
          "$SDKMGR" "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Build APK (debug)
        run: flutter build apk --debug

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: ponto-ai-apks
          path: |
            mobile/build/app/outputs/flutter-apk/app-debug.apk
            mobile/build/app/outputs/flutter-apk/app-release.apk
